// Pizza  parlor  accepting  maximum  M  orders.  Orders  are  served  in  first  come  first  served
// basis.  Order  once  placed  cannot  be  cancelled.  Write  C++  program  to  simulate  the  system
// using circular queue using array.

#include <iostream>
#define MAX 5
using namespace std;

class queuepizza
{
	int q[MAX], rear, front;

public:
	queuepizza()
	{
		front = rear = -1;
	}

	void insert(int);
	int delete1();
	void display();
};

void queuepizza::insert(int value)
{
	if (((rear == MAX - 1) && (front == -1)) || (rear - front) == -1)

		cout << "\n Queue is Full";
	else
	{
		if (rear == MAX - 1) // creating circular link
			rear = -1;
		rear++;
		q[rear] = value;
		cout << "Order added at " << rear << endl;
	}
}

int queuepizza::delete1()
{
	int value;
	if (rear == front)
	{
		cout << endl
			<< "Queue is Empty";
		return -999;
	}
	else
	{
		if ((front == MAX - 1) && rear < front) // creating circular link
			front = -1;
		front++;
		value = q[front];
		cout << "Order removed from " << front << endl;
		return value;
	}
}

void queuepizza ::display()
{
	int i;

	cout << endl;
	if (front <= rear)
	{
		for(i=front+1;i<=rear;i++){
			cout<<q[i]<<" ";
		}
	}
	else
	{
		for(i=0;i<=rear;i++){
			cout<<q[i]<<" ";
		}
	}
}
int main()
{
	int choice, x, y;
	queuepizza q1;
	do
	{

		cout << "\n*****MENU*****";
		cout << "\n1. Place an order id ";
		cout << "\n2. Remove an order id ";
		cout << "\n3. Display the queue ";
		cout << "\nEnter your choice: ";
		cin >> choice;
		switch (choice)
		{
		case 1:
			cout << "\n Enter the order id  :  ";
			cin >> y;
			q1.insert(y);
			q1.display();
			break;
		case 2:
			x = q1.delete1();
			if (x != -999)
				cout << "\nThe removed order is: " << x;
			q1.display();
			break;
		case 3:
			q1.display();
			break;
		default:
			cout << "\nWrong choice!!";
			break;
		}
	} while (choice!=3);

	return 0;
}
